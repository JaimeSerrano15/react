{"version":3,"sources":["Row/Row.js","Row/RowForm.js","Row/RowsList.js","index.js"],"names":["Row","carnet","horario","hour","late","this","_carnet","_horario","_hour","_late","RowForm","props","date","Date","state","toLocaleString","handleSubmit","bind","Change","Change2","Change3","event","preventDefault","row","onSave","alert","setState","target","value","checked","id","action","onSubmit","className","for","class","type","name","maxlength","onChange","data-submit","React","Component","RowsList","rows","map","key","onClick","onDelete","scope","renderBody","App","err","slice","find","current","push","filter","ele","saveRow","deleteRow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae8bd26d.chunk.js","sourcesContent":["class Row {\n    constructor(carnet, horario, hour, late) {\n        this._carnet = carnet;\n        this._horario = horario;\n        this._hour = hour;\n        this._late = late;\n    }\n\n    get carnet() { return this._carnet }\n    get horario() { return this._horario }\n    get hour() { return this._hour }\n    get late() { return this._late }\n\n    set carnet(carnet) {this._carnet = carnet}\n    set horario(horario) {this._horario = horario}\n    set hour(hour) {this._hour = hour}\n    set late(late) {this._late = late}\n\n}\n\nexport default Row;","import React from 'react';\nimport Row from './Row';\n\nclass RowForm extends React.Component {\n    constructor(props) {\n        var date = new Date();\n        super(props)\n        this.state = { carnet: '', horario: '', hour: date.toLocaleString(), late: '' };\n\n        //this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.Change = this.Change.bind(this);\n        this.Change2 = this.Change.bind(this);\n        this.Change3 = this.Change.bind(this);\n        //this.Change4 = this.Change.bind(this);\n\n\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        let row = new Row(this.state.carnet, this.state.horario, this.state.hour, this.state.late);\n        this.props.onSave(row);\n        alert(\"a ver\" + this.state.carnet + \" - \" + this.state.horario + \" - \" + this.state.hour + \" - \" + this.state.late);\n    }\n\n    Change(event){\n        this.setState({carnet: event.target.value});\n    }\n\n    Change2(event){\n        this.setState({horario: event.target.value});\n    }\n\n    Change3(event){\n        if(event.state.checked){\n            this.setState({late : \"A_tiempo\"});\n        }\n        else{\n            this.setState({late: \"Tarde\"});\n        }\n    }\n\n\n\n    /*handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }*/\n\n    render() {\n        return (\n            <form id=\"contact\" action=\"\" onSubmit={this.handleSubmit}>\n                <div className=\"jumbotron\">\n                    <h1>Registro de Laboratorio</h1>\n                    <div>\n                        <label for=\"carnet\" class=\"col-sm-2 col-form-label\">Ingrese el carnet: </label>\n                        <br></br>\n                        <input class=\"form-control\" type=\"text\" name=\"carnet\" id=\"carnet_field\" maxlength=\"8\"   onChange={this.Change}></input>\n                        <div class=\"form-group\">\n                            <label for=\"schedule\">Seleccione el horario:</label>\n                            <select value={this.state.horario} name=\"schedule\" class=\"form-control\" id=\"schedule_field\" onChange={this.Change2}>\n                                <option value=\"Lunes de 9:00 a 11.00\">Lunes de 9:00 a 11.00</option>\n                                <option value=\"Martes de 13:30 a 15:30\">Martes de 13:30 a 15:30</option>\n                                <option value=\"Miércoles de 9:00 a 11.00\">Miércoles de 9:00 a 11.00</option>\n                                <option value=\"Jueves de 13:30 a 15:30\">Jueves de 13:30 a 15:30</option>\n                                <option value=\"Viernes de 9:00 a 11.00\">Viernes de 9:00 a 11.00</option>\n                                <option value=\"Viernes de 15:30 a 17:30\">Viernes de 15:30 a 17:30</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"custom-control custom-switch\">\n                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"late_switch\" name=\"check\" onChange={this.Change3}></input>\n                                <label class=\"custom-control-label\" for=\"late_switch\">Llegó tarde?</label>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <button name=\"submit\" type=\"submit\"  data-submit=\"...Sending\" class=\"btn btn-danger\" id=\"submit_btn\" >Ingresar</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default RowForm;\n","import React from 'react';\nimport Row from './Row';\n\nclass RowsList extends React.Component {\n\n    renderBody(rows) {\n        return rows.map(({ carnet, horario, hour, late }) => {\n            return (\n                <tr key={carnet}>\n                    <td>{carnet}</td>\n                    <td>{horario}</td>\n                    <td>{hour}</td>\n                    <td>{late}</td>\n                    <td>\n                        <button onClick={() => { this.props.onDelete(carnet) }}>Delete</button>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <table class=\"table table-hover\">\n                    <thead>\n                        <tr class=\"table-dark\">\n                            <th scope=\"col\">Carnet</th>\n                            <th scope=\"col\">Horario de laboratorio</th>\n                            <th scope=\"col\">Hora de ingreso</th>\n                            <th scope=\"col\">Tarde?</th>\n                            <th scope=\"col\">Eliminar</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"table_body\">\n                        {this.renderBody(this.props.rows)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default RowsList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RowForm from './Row/RowForm';\nimport RowsList from './Row/RowsList';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rows: [],\n            err: ''\n        }\n    }\n\n    saveRow(row) {\n        const rows = this.state.rows.slice();\n        if (!rows.find((current) => {\n            return current.carnet === row.carnet;\n        })) {\n            rows.push(row);\n            this.setState({ rows, err: '' });\n        } else {\n            this.setState({ err: 'El carnet ya existe ' })\n        }\n    }\n\n    deleteRow(carnet) {\n        const rows = this.state.rows.filter(function (ele) {\n            return ele.carnet !== carnet;\n        });\n        this.setState({ rows });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div>{this.state.err}</div>\n                    <RowForm onSave={(row) =>{\n                        this.saveRow(row)\n                    }} />\n                </div>\n                <RowsList rows={this.state.rows} onDelete={(carnet) => {\n                    this.deleteRow(carnet);\n                }} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}